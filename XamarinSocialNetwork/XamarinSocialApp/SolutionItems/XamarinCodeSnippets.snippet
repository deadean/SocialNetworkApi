<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define a Bindable property</Title>
			<Shortcut>propbp</Shortcut>
			<Description>Code snippet for a property using BindableProperty as the backing store</Description>
			<Author>Microsoft Corporation</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<References>
			<Reference>
				<Assembly>Xamarin.Forms.dll</Assembly>
			</Reference>
		</References>
		<Import>
			<Namespace>Xamarin.Forms</Namespace>
		</Import>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>type</ID>
					<ToolTip>Property Type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>property</ID>
					<ToolTip>Property Name</ToolTip>
					<Default>Super</Default>
				</Literal>
				<Literal default="true">
					<ID>ownerclass</ID>
					<ToolTip>The owning class of this Property.  Typically the class that it is declared in.</ToolTip>
					<Function>ClassName()</Function>
				</Literal>				
			</Declarations>
			<Code Language="csharp">
				<![CDATA[								
		public static readonly BindableProperty $property$Property = 
			BindableProperty.Create<$ownerclass$, $type$>(x => x.$property$, default($type$));

		public $type$ $property$
		{
				get 
				{
					return ($type$)GetValue($property$Property); 
				}
		
				set
				{ 
					SetValue($property$Property, value); 
				}
		}
$end$]]>


			</Code>
		</Snippet>
	</CodeSnippet>

	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define a Attached bindable property</Title>
			<Shortcut>propba</Shortcut>
			<Description>Code snippet for a attached property using BindableProperty as the backing store</Description>
			<Author>Microsoft Corporation</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<References>
			<Reference>
				<Assembly>Xamarin.Forms.dll</Assembly>
			</Reference>
		</References>
		<Import>
			<Namespace>Xamarin.Forms</Namespace>
		</Import>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>type</ID>
					<ToolTip>Property Type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>property</ID>
					<ToolTip>Property Name</ToolTip>
					<Default>SuperAttached</Default>
				</Literal>
				<Literal default="true">
					<ID>ownerclass</ID>
					<ToolTip>The owning class of this Property.  Typically the class that it is declared in.</ToolTip>
					<Default>BindableObject</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[								
		public static readonly BindableProperty $property$Property = 
			BindableProperty.CreateAttached<$ownerclass$, $type$>(
				bo => Get$property$(bo), 
				default($type$),
				propertyChanged:On$property$Changed);

		static $type$ Get$property$(BindableObject source)
		{
			return ($type$)source.GetValue($property$Property);
		}
		
		static void On$property$Changed(BindableObject source, $type$ oldValue, $type$ newValue)
		{
			var bindableSource = source as $ownerclass$;
			
			if (bindableSource == null)
				return;
		}
$end$]]>


			</Code>
		</Snippet>
	</CodeSnippet>

	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define property for binding with backing field and OnPropertyChanged() invoking</Title>
			<Shortcut>propb</Shortcut>
			<Description>Code snippet for defining proprerty</Description>
			<Author>Microsoft Corporation</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<References>
			<Reference>
				<Assembly>Xamarin.Forms.dll</Assembly>
			</Reference>
		</References>
		<Import>
			<Namespace>Xamarin.Forms</Namespace>
		</Import>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>type</ID>
					<ToolTip>Property Type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>property</ID>
					<ToolTip>Property Name</ToolTip>
					<Default>Property</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[
		$type$ mv$property$;
		
		public $type$ $property$
		{
			get
			{
				return mv$property$;
			}
			
			set
			{
				mv$property$ = value;
				this.OnPropertyChanged();
			}
		}
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>

	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define property for interface with get and set</Title>
			<Shortcut>ipropgs</Shortcut>
			<Description>Code snippet for defining proprerty in interface</Description>
			<Author>Microsoft Corporation</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<References>
			<Reference>
				<Assembly>Xamarin.Forms.dll</Assembly>
			</Reference>
		</References>
		<Import>
			<Namespace>Xamarin.Forms</Namespace>
		</Import>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>type</ID>
					<ToolTip>Property Type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>property</ID>
					<ToolTip>Property Name</ToolTip>
					<Default>Property</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[
		$type$ $property$ { get; set; }
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>

	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define property for interface with get</Title>
			<Shortcut>ipropg</Shortcut>
			<Description>Code snippet for defining proprerty in interface</Description>
			<Author>Microsoft Corporation</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<References>
			<Reference>
				<Assembly>Xamarin.Forms.dll</Assembly>
			</Reference>
		</References>
		<Import>
			<Namespace>Xamarin.Forms</Namespace>
		</Import>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>type</ID>
					<ToolTip>Property Type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>property</ID>
					<ToolTip>Property Name</ToolTip>
					<Default>Property</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[
		$type$ $property$ { get; }
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>

	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define property for interface with set</Title>
			<Shortcut>iprops</Shortcut>
			<Description>Code snippet for defining proprerty in interface</Description>
			<Author>Microsoft Corporation</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<References>
			<Reference>
				<Assembly>Xamarin.Forms.dll</Assembly>
			</Reference>
		</References>
		<Import>
			<Namespace>Xamarin.Forms</Namespace>
		</Import>
		<Snippet>
			<Declarations>
				<Literal>
					<ID>type</ID>
					<ToolTip>Property Type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>property</ID>
					<ToolTip>Property Name</ToolTip>
					<Default>Property</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
				<![CDATA[
		$type$ $property$ { set; }
$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>
